/*
 * generated by Xtext 2.26.0
 */
grammar InternalCPtester;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.CPtesterGrammarAccess;

}
@parser::members {
	private CPtesterGrammarAccess grammarAccess;

	public void setGrammarAccess(CPtesterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven
entryRuleGiven
:
{ before(grammarAccess.getGivenRule()); }
	 ruleGiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule Given
ruleGiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndWhen
entryRuleAndWhen
:
{ before(grammarAccess.getAndWhenRule()); }
	 ruleAndWhen
{ after(grammarAccess.getAndWhenRule()); } 
	 EOF 
;

// Rule AndWhen
ruleAndWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndWhenAccess().getGroup()); }
		(rule__AndWhen__Group__0)
		{ after(grammarAccess.getAndWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhen
entryRuleWhen
:
{ before(grammarAccess.getWhenRule()); }
	 ruleWhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule When
ruleWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenAccess().getGroup()); }
		(rule__When__Group__0)
		{ after(grammarAccess.getWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitial
entryRuleInitial
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialAccess().getGroup()); }
		(rule__Initial__Group__0)
		{ after(grammarAccess.getInitialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelightRGB
entryRulelightRGB
:
{ before(grammarAccess.getLightRGBRule()); }
	 rulelightRGB
{ after(grammarAccess.getLightRGBRule()); } 
	 EOF 
;

// Rule lightRGB
rulelightRGB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLightRGBAccess().getGroup()); }
		(rule__LightRGB__Group__0)
		{ after(grammarAccess.getLightRGBAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebuzzerOff
entryRulebuzzerOff
:
{ before(grammarAccess.getBuzzerOffRule()); }
	 rulebuzzerOff
{ after(grammarAccess.getBuzzerOffRule()); } 
	 EOF 
;

// Rule buzzerOff
rulebuzzerOff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuzzerOffAccess().getGroup()); }
		(rule__BuzzerOff__Group__0)
		{ after(grammarAccess.getBuzzerOffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebuzzerOn
entryRulebuzzerOn
:
{ before(grammarAccess.getBuzzerOnRule()); }
	 rulebuzzerOn
{ after(grammarAccess.getBuzzerOnRule()); } 
	 EOF 
;

// Rule buzzerOn
rulebuzzerOn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuzzerOnAccess().getGroup()); }
		(rule__BuzzerOn__Group__0)
		{ after(grammarAccess.getBuzzerOnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecalibration
entryRulecalibration
:
{ before(grammarAccess.getCalibrationRule()); }
	 rulecalibration
{ after(grammarAccess.getCalibrationRule()); } 
	 EOF 
;

// Rule calibration
rulecalibration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalibrationAccess().getGroup()); }
		(rule__Calibration__Group__0)
		{ after(grammarAccess.getCalibrationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecameraColor
entryRulecameraColor
:
{ before(grammarAccess.getCameraColorRule()); }
	 rulecameraColor
{ after(grammarAccess.getCameraColorRule()); } 
	 EOF 
;

// Rule cameraColor
rulecameraColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraColorAccess().getGroup()); }
		(rule__CameraColor__Group__0)
		{ after(grammarAccess.getCameraColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereadAllServos
entryRulereadAllServos
:
{ before(grammarAccess.getReadAllServosRule()); }
	 rulereadAllServos
{ after(grammarAccess.getReadAllServosRule()); } 
	 EOF 
;

// Rule readAllServos
rulereadAllServos 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadAllServosAccess().getGroup()); }
		(rule__ReadAllServos__Group__0)
		{ after(grammarAccess.getReadAllServosAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereadServo
entryRulereadServo
:
{ before(grammarAccess.getReadServoRule()); }
	 rulereadServo
{ after(grammarAccess.getReadServoRule()); } 
	 EOF 
;

// Rule readServo
rulereadServo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadServoAccess().getGroup()); }
		(rule__ReadServo__Group__0)
		{ after(grammarAccess.getReadServoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerotateServo
entryRulerotateServo
:
{ before(grammarAccess.getRotateServoRule()); }
	 rulerotateServo
{ after(grammarAccess.getRotateServoRule()); } 
	 EOF 
;

// Rule rotateServo
rulerotateServo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateServoAccess().getGroup()); }
		(rule__RotateServo__Group__0)
		{ after(grammarAccess.getRotateServoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerotateAllServos
entryRulerotateAllServos
:
{ before(grammarAccess.getRotateAllServosRule()); }
	 rulerotateAllServos
{ after(grammarAccess.getRotateAllServosRule()); } 
	 EOF 
;

// Rule rotateAllServos
rulerotateAllServos 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getGroup()); }
		(rule__RotateAllServos__Group__0)
		{ after(grammarAccess.getRotateAllServosAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getGroup()); }
		(rule__Result__Group__0)
		{ after(grammarAccess.getResultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditions
entryRuleConditions
:
{ before(grammarAccess.getConditionsRule()); }
	 ruleConditions
{ after(grammarAccess.getConditionsRule()); } 
	 EOF 
;

// Rule Conditions
ruleConditions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionsAccess().getGroup()); }
		(rule__Conditions__Group__0)
		{ after(grammarAccess.getConditionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSolution
entryRuleSolution
:
{ before(grammarAccess.getSolutionRule()); }
	 ruleSolution
{ after(grammarAccess.getSolutionRule()); } 
	 EOF 
;

// Rule Solution
ruleSolution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSolutionAccess().getAlternatives()); }
		(rule__Solution__Alternatives)
		{ after(grammarAccess.getSolutionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisAtSingle
entryRuleisAtSingle
:
{ before(grammarAccess.getIsAtSingleRule()); }
	 ruleisAtSingle
{ after(grammarAccess.getIsAtSingleRule()); } 
	 EOF 
;

// Rule isAtSingle
ruleisAtSingle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsAtSingleAccess().getGroup()); }
		(rule__IsAtSingle__Group__0)
		{ after(grammarAccess.getIsAtSingleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisAt
entryRuleisAt
:
{ before(grammarAccess.getIsAtRule()); }
	 ruleisAt
{ after(grammarAccess.getIsAtRule()); } 
	 EOF 
;

// Rule isAt
ruleisAt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsAtAccess().getGroup()); }
		(rule__IsAt__Group__0)
		{ after(grammarAccess.getIsAtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAngle_res
entryRuleAngle_res
:
{ before(grammarAccess.getAngle_resRule()); }
	 ruleAngle_res
{ after(grammarAccess.getAngle_resRule()); } 
	 EOF 
;

// Rule Angle_res
ruleAngle_res 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAngle_resAccess().getAngle_resAssignment()); }
		(rule__Angle_res__Angle_resAssignment)
		{ after(grammarAccess.getAngle_resAccess().getAngle_resAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAngle
entryRuleAngle
:
{ before(grammarAccess.getAngleRule()); }
	 ruleAngle
{ after(grammarAccess.getAngleRule()); } 
	 EOF 
;

// Rule Angle
ruleAngle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAngleAccess().getAngleAssignment()); }
		(rule__Angle__AngleAssignment)
		{ after(grammarAccess.getAngleAccess().getAngleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getTimeAssignment()); }
		(rule__Time__TimeAssignment)
		{ after(grammarAccess.getTimeAccess().getTimeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServo
entryRuleServo
:
{ before(grammarAccess.getServoRule()); }
	 ruleServo
{ after(grammarAccess.getServoRule()); } 
	 EOF 
;

// Rule Servo
ruleServo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServoAccess().getServoAssignment()); }
		(rule__Servo__ServoAssignment)
		{ after(grammarAccess.getServoAccess().getServoAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleV_max
entryRuleV_max
:
{ before(grammarAccess.getV_maxRule()); }
	 ruleV_max
{ after(grammarAccess.getV_maxRule()); } 
	 EOF 
;

// Rule V_max
ruleV_max 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getV_maxAccess().getV_maxAssignment()); }
		(rule__V_max__V_maxAssignment)
		{ after(grammarAccess.getV_maxAccess().getV_maxAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_max
entryRuleS_max
:
{ before(grammarAccess.getS_maxRule()); }
	 ruleS_max
{ after(grammarAccess.getS_maxRule()); } 
	 EOF 
;

// Rule S_max
ruleS_max 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_maxAccess().getS_maxAssignment()); }
		(rule__S_max__S_maxAssignment)
		{ after(grammarAccess.getS_maxAccess().getS_maxAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleH_max
entryRuleH_max
:
{ before(grammarAccess.getH_maxRule()); }
	 ruleH_max
{ after(grammarAccess.getH_maxRule()); } 
	 EOF 
;

// Rule H_max
ruleH_max 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getH_maxAccess().getH_maxAssignment()); }
		(rule__H_max__H_maxAssignment)
		{ after(grammarAccess.getH_maxAccess().getH_maxAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleV_min
entryRuleV_min
:
{ before(grammarAccess.getV_minRule()); }
	 ruleV_min
{ after(grammarAccess.getV_minRule()); } 
	 EOF 
;

// Rule V_min
ruleV_min 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getV_minAccess().getV_minAssignment()); }
		(rule__V_min__V_minAssignment)
		{ after(grammarAccess.getV_minAccess().getV_minAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_min
entryRuleS_min
:
{ before(grammarAccess.getS_minRule()); }
	 ruleS_min
{ after(grammarAccess.getS_minRule()); } 
	 EOF 
;

// Rule S_min
ruleS_min 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_minAccess().getS_minAssignment()); }
		(rule__S_min__S_minAssignment)
		{ after(grammarAccess.getS_minAccess().getS_minAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleH_min
entryRuleH_min
:
{ before(grammarAccess.getH_minRule()); }
	 ruleH_min
{ after(grammarAccess.getH_minRule()); } 
	 EOF 
;

// Rule H_min
ruleH_min 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getH_minAccess().getH_minAssignment()); }
		(rule__H_min__H_minAssignment)
		{ after(grammarAccess.getH_minAccess().getH_minAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getColorAssignment()); }
		(rule__Color__ColorAssignment)
		{ after(grammarAccess.getColorAccess().getColorAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleB
entryRuleB
:
{ before(grammarAccess.getBRule()); }
	 ruleB
{ after(grammarAccess.getBRule()); } 
	 EOF 
;

// Rule B
ruleB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBAccess().getBAssignment()); }
		(rule__B__BAssignment)
		{ after(grammarAccess.getBAccess().getBAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleG
entryRuleG
:
{ before(grammarAccess.getGRule()); }
	 ruleG
{ after(grammarAccess.getGRule()); } 
	 EOF 
;

// Rule G
ruleG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGAccess().getGAssignment()); }
		(rule__G__GAssignment)
		{ after(grammarAccess.getGAccess().getGAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleR
entryRuleR
:
{ before(grammarAccess.getRRule()); }
	 ruleR
{ after(grammarAccess.getRRule()); } 
	 EOF 
;

// Rule R
ruleR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRAccess().getRAssignment()); }
		(rule__R__RAssignment)
		{ after(grammarAccess.getRAccess().getRAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getRotateServoParserRuleCall_0()); }
		rulerotateServo
		{ after(grammarAccess.getCommandAccess().getRotateServoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRotateAllServosParserRuleCall_1()); }
		rulerotateAllServos
		{ after(grammarAccess.getCommandAccess().getRotateAllServosParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getReadServoParserRuleCall_2()); }
		rulereadServo
		{ after(grammarAccess.getCommandAccess().getReadServoParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getReadAllServosParserRuleCall_3()); }
		rulereadAllServos
		{ after(grammarAccess.getCommandAccess().getReadAllServosParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCameraColorParserRuleCall_4()); }
		rulecameraColor
		{ after(grammarAccess.getCommandAccess().getCameraColorParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCalibrationParserRuleCall_5()); }
		rulecalibration
		{ after(grammarAccess.getCommandAccess().getCalibrationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getBuzzerOnParserRuleCall_6()); }
		rulebuzzerOn
		{ after(grammarAccess.getCommandAccess().getBuzzerOnParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getBuzzerOffParserRuleCall_7()); }
		rulebuzzerOff
		{ after(grammarAccess.getCommandAccess().getBuzzerOffParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getLightRGBParserRuleCall_8()); }
		rulelightRGB
		{ after(grammarAccess.getCommandAccess().getLightRGBParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Solution__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSolutionAccess().getIsAtSingleParserRuleCall_0()); }
		ruleisAtSingle
		{ after(grammarAccess.getSolutionAccess().getIsAtSingleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSolutionAccess().getIsAtParserRuleCall_1()); }
		ruleisAt
		{ after(grammarAccess.getSolutionAccess().getIsAtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
	'Scenario'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getSurnameAssignment_1()); }
	(rule__Scenario__SurnameAssignment_1)
	{ after(grammarAccess.getScenarioAccess().getSurnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGivenAssignment_3()); }
	(rule__Scenario__GivenAssignment_3)
	{ after(grammarAccess.getScenarioAccess().getGivenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getAndGivenAssignment_4()); }
	(rule__Scenario__AndGivenAssignment_4)*
	{ after(grammarAccess.getScenarioAccess().getAndGivenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
	rule__Scenario__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getWhenAssignment_5()); }
	(rule__Scenario__WhenAssignment_5)
	{ after(grammarAccess.getScenarioAccess().getWhenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__6__Impl
	rule__Scenario__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getThenAssignment_6()); }
	(rule__Scenario__ThenAssignment_6)
	{ after(grammarAccess.getScenarioAccess().getThenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__7__Impl
	rule__Scenario__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getAndAssignment_7()); }
	(rule__Scenario__AndAssignment_7)*
	{ after(grammarAccess.getScenarioAccess().getAndAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getNameAssignment_0()); }
	(rule__Given__NameAssignment_0)
	{ after(grammarAccess.getGivenAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getInitialAssignment_1()); }
	(rule__Given__InitialAssignment_1)
	{ after(grammarAccess.getGivenAccess().getInitialAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndWhen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndWhen__Group__0__Impl
	rule__AndWhen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndWhenAccess().getNameAssignment_0()); }
	(rule__AndWhen__NameAssignment_0)
	{ after(grammarAccess.getAndWhenAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndWhen__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndWhenAccess().getCommandAssignment_1()); }
	(rule__AndWhen__CommandAssignment_1)
	{ after(grammarAccess.getAndWhenAccess().getCommandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__0__Impl
	rule__When__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getNameAssignment_0()); }
	(rule__When__NameAssignment_0)
	{ after(grammarAccess.getWhenAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getCommandAssignment_1()); }
	(rule__When__CommandAssignment_1)
	{ after(grammarAccess.getWhenAccess().getCommandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getNameAssignment_0()); }
	(rule__Then__NameAssignment_0)
	{ after(grammarAccess.getThenAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getResultAssignment_1()); }
	(rule__Then__ResultAssignment_1)
	{ after(grammarAccess.getThenAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getNameAssignment_0()); }
	(rule__And__NameAssignment_0)
	{ after(grammarAccess.getAndAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
	rule__And__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getConditionsAssignment_1()); }
	(rule__And__ConditionsAssignment_1)
	{ after(grammarAccess.getAndAccess().getConditionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__2__Impl
	rule__And__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getQueryKeyword_2()); }
	'Query'
	{ after(grammarAccess.getAndAccess().getQueryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getSolutionAssignment_3()); }
	(rule__And__SolutionAssignment_3)
	{ after(grammarAccess.getAndAccess().getSolutionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__0__Impl
	rule__Initial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNameAssignment_0()); }
	(rule__Initial__NameAssignment_0)
	{ after(grammarAccess.getInitialAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__1__Impl
	rule__Initial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInitialAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__2__Impl
	rule__Initial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getTimeAssignment_2()); }
	(rule__Initial__TimeAssignment_2)
	{ after(grammarAccess.getInitialAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInitialAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightRGB__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__0__Impl
	rule__LightRGB__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getNameAssignment_0()); }
	(rule__LightRGB__NameAssignment_0)
	{ after(grammarAccess.getLightRGBAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__1__Impl
	rule__LightRGB__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLightRGBAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__2__Impl
	rule__LightRGB__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getRAssignment_2()); }
	(rule__LightRGB__RAssignment_2)
	{ after(grammarAccess.getLightRGBAccess().getRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__3__Impl
	rule__LightRGB__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getLightRGBAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__4__Impl
	rule__LightRGB__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getGAssignment_4()); }
	(rule__LightRGB__GAssignment_4)
	{ after(grammarAccess.getLightRGBAccess().getGAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__5__Impl
	rule__LightRGB__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getLightRGBAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__6__Impl
	rule__LightRGB__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getBAssignment_6()); }
	(rule__LightRGB__BAssignment_6)
	{ after(grammarAccess.getLightRGBAccess().getBAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightRGB__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightRGBAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getLightRGBAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuzzerOff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOff__Group__0__Impl
	rule__BuzzerOff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOffAccess().getNameAssignment_0()); }
	(rule__BuzzerOff__NameAssignment_0)
	{ after(grammarAccess.getBuzzerOffAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOff__Group__1__Impl
	rule__BuzzerOff__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOffAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBuzzerOffAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOff__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOffAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBuzzerOffAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuzzerOn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOn__Group__0__Impl
	rule__BuzzerOn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOnAccess().getNameAssignment_0()); }
	(rule__BuzzerOn__NameAssignment_0)
	{ after(grammarAccess.getBuzzerOnAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOn__Group__1__Impl
	rule__BuzzerOn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOnAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBuzzerOnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOn__Group__2__Impl
	rule__BuzzerOn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOnAccess().getTimeAssignment_2()); }
	(rule__BuzzerOn__TimeAssignment_2)
	{ after(grammarAccess.getBuzzerOnAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuzzerOn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuzzerOnAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBuzzerOnAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__0__Impl
	rule__Calibration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getNameAssignment_0()); }
	(rule__Calibration__NameAssignment_0)
	{ after(grammarAccess.getCalibrationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__1__Impl
	rule__Calibration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCalibrationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__2__Impl
	rule__Calibration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getColorAssignment_2()); }
	(rule__Calibration__ColorAssignment_2)
	{ after(grammarAccess.getCalibrationAccess().getColorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__3__Impl
	rule__Calibration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__4__Impl
	rule__Calibration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getH_minAssignment_4()); }
	(rule__Calibration__H_minAssignment_4)
	{ after(grammarAccess.getCalibrationAccess().getH_minAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__5__Impl
	rule__Calibration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__6__Impl
	rule__Calibration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getS_minAssignment_6()); }
	(rule__Calibration__S_minAssignment_6)
	{ after(grammarAccess.getCalibrationAccess().getS_minAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__7__Impl
	rule__Calibration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__8__Impl
	rule__Calibration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getV_minAssignment_8()); }
	(rule__Calibration__V_minAssignment_8)
	{ after(grammarAccess.getCalibrationAccess().getV_minAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__9__Impl
	rule__Calibration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_9()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__10__Impl
	rule__Calibration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getH_maxAssignment_10()); }
	(rule__Calibration__H_maxAssignment_10)
	{ after(grammarAccess.getCalibrationAccess().getH_maxAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__11__Impl
	rule__Calibration__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__12__Impl
	rule__Calibration__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getS_maxAssignment_12()); }
	(rule__Calibration__S_maxAssignment_12)
	{ after(grammarAccess.getCalibrationAccess().getS_maxAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__13__Impl
	rule__Calibration__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCommaKeyword_13()); }
	','
	{ after(grammarAccess.getCalibrationAccess().getCommaKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__14__Impl
	rule__Calibration__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getV_maxAssignment_14()); }
	(rule__Calibration__V_maxAssignment_14)
	{ after(grammarAccess.getCalibrationAccess().getV_maxAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getRightParenthesisKeyword_15()); }
	')'
	{ after(grammarAccess.getCalibrationAccess().getRightParenthesisKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CameraColor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColor__Group__0__Impl
	rule__CameraColor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorAccess().getNameAssignment_0()); }
	(rule__CameraColor__NameAssignment_0)
	{ after(grammarAccess.getCameraColorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColor__Group__1__Impl
	rule__CameraColor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCameraColorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColor__Group__2__Impl
	rule__CameraColor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorAccess().getTimeAssignment_2()); }
	(rule__CameraColor__TimeAssignment_2)
	{ after(grammarAccess.getCameraColorAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCameraColorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReadAllServos__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadAllServos__Group__0__Impl
	rule__ReadAllServos__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAllServosAccess().getNameAssignment_0()); }
	(rule__ReadAllServos__NameAssignment_0)
	{ after(grammarAccess.getReadAllServosAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadAllServos__Group__1__Impl
	rule__ReadAllServos__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAllServosAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReadAllServosAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadAllServos__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAllServosAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getReadAllServosAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReadServo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadServo__Group__0__Impl
	rule__ReadServo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadServoAccess().getNameAssignment_0()); }
	(rule__ReadServo__NameAssignment_0)
	{ after(grammarAccess.getReadServoAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadServo__Group__1__Impl
	rule__ReadServo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadServoAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReadServoAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadServo__Group__2__Impl
	rule__ReadServo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadServoAccess().getServoAssignment_2()); }
	(rule__ReadServo__ServoAssignment_2)
	{ after(grammarAccess.getReadServoAccess().getServoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadServo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadServoAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReadServoAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateServo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__0__Impl
	rule__RotateServo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getNameAssignment_0()); }
	(rule__RotateServo__NameAssignment_0)
	{ after(grammarAccess.getRotateServoAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__1__Impl
	rule__RotateServo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRotateServoAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__2__Impl
	rule__RotateServo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getServoAssignment_2()); }
	(rule__RotateServo__ServoAssignment_2)
	{ after(grammarAccess.getRotateServoAccess().getServoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__3__Impl
	rule__RotateServo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRotateServoAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__4__Impl
	rule__RotateServo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getAngleAssignment_4()); }
	(rule__RotateServo__AngleAssignment_4)
	{ after(grammarAccess.getRotateServoAccess().getAngleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__5__Impl
	rule__RotateServo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getRotateServoAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__6__Impl
	rule__RotateServo__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getTimeAssignment_6()); }
	(rule__RotateServo__TimeAssignment_6)
	{ after(grammarAccess.getRotateServoAccess().getTimeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateServo__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateServoAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getRotateServoAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateAllServos__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__0__Impl
	rule__RotateAllServos__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getNameAssignment_0()); }
	(rule__RotateAllServos__NameAssignment_0)
	{ after(grammarAccess.getRotateAllServosAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__1__Impl
	rule__RotateAllServos__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRotateAllServosAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__2__Impl
	rule__RotateAllServos__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle1Assignment_2()); }
	(rule__RotateAllServos__Angle1Assignment_2)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__3__Impl
	rule__RotateAllServos__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__4__Impl
	rule__RotateAllServos__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle2Assignment_4()); }
	(rule__RotateAllServos__Angle2Assignment_4)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__5__Impl
	rule__RotateAllServos__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__6__Impl
	rule__RotateAllServos__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle3Assignment_6()); }
	(rule__RotateAllServos__Angle3Assignment_6)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle3Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__7__Impl
	rule__RotateAllServos__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__8__Impl
	rule__RotateAllServos__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle4Assignment_8()); }
	(rule__RotateAllServos__Angle4Assignment_8)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle4Assignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__9__Impl
	rule__RotateAllServos__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_9()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__10__Impl
	rule__RotateAllServos__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle5Assignment_10()); }
	(rule__RotateAllServos__Angle5Assignment_10)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle5Assignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__11__Impl
	rule__RotateAllServos__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__12__Impl
	rule__RotateAllServos__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getAngle6Assignment_12()); }
	(rule__RotateAllServos__Angle6Assignment_12)
	{ after(grammarAccess.getRotateAllServosAccess().getAngle6Assignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__13__Impl
	rule__RotateAllServos__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getCommaKeyword_13()); }
	','
	{ after(grammarAccess.getRotateAllServosAccess().getCommaKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__14__Impl
	rule__RotateAllServos__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getTimeAssignment_14()); }
	(rule__RotateAllServos__TimeAssignment_14)
	{ after(grammarAccess.getRotateAllServosAccess().getTimeAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateAllServos__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAllServosAccess().getRightParenthesisKeyword_15()); }
	')'
	{ after(grammarAccess.getRotateAllServosAccess().getRightParenthesisKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Result__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group__0__Impl
	rule__Result__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getNameAssignment_0()); }
	(rule__Result__NameAssignment_0)
	{ after(grammarAccess.getResultAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group__1__Impl
	rule__Result__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getResultAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group__2__Impl
	rule__Result__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getTimeAssignment_2()); }
	(rule__Result__TimeAssignment_2)
	{ after(grammarAccess.getResultAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getResultAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__0__Impl
	rule__Conditions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getNameAssignment_0()); }
	(rule__Conditions__NameAssignment_0)
	{ after(grammarAccess.getConditionsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__1__Impl
	rule__Conditions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConditionsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__2__Impl
	rule__Conditions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getTimeAssignment_2()); }
	(rule__Conditions__TimeAssignment_2)
	{ after(grammarAccess.getConditionsAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConditionsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsAtSingle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__0__Impl
	rule__IsAtSingle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getNameAssignment_0()); }
	(rule__IsAtSingle__NameAssignment_0)
	{ after(grammarAccess.getIsAtSingleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__1__Impl
	rule__IsAtSingle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIsAtSingleAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__2__Impl
	rule__IsAtSingle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getServoAssignment_2()); }
	(rule__IsAtSingle__ServoAssignment_2)
	{ after(grammarAccess.getIsAtSingleAccess().getServoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__3__Impl
	rule__IsAtSingle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getIsAtSingleAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__4__Impl
	rule__IsAtSingle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getAngleAssignment_4()); }
	(rule__IsAtSingle__AngleAssignment_4)
	{ after(grammarAccess.getIsAtSingleAccess().getAngleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__5__Impl
	rule__IsAtSingle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getIsAtSingleAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__6__Impl
	rule__IsAtSingle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getAngle_resAssignment_6()); }
	(rule__IsAtSingle__Angle_resAssignment_6)
	{ after(grammarAccess.getIsAtSingleAccess().getAngle_resAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAtSingle__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtSingleAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getIsAtSingleAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsAt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__0__Impl
	rule__IsAt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getNameAssignment_0()); }
	(rule__IsAt__NameAssignment_0)
	{ after(grammarAccess.getIsAtAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__1__Impl
	rule__IsAt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIsAtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__2__Impl
	rule__IsAt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle1Assignment_2()); }
	(rule__IsAt__Angle1Assignment_2)
	{ after(grammarAccess.getIsAtAccess().getAngle1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__3__Impl
	rule__IsAt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__4__Impl
	rule__IsAt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle2Assignment_4()); }
	(rule__IsAt__Angle2Assignment_4)
	{ after(grammarAccess.getIsAtAccess().getAngle2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__5__Impl
	rule__IsAt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__6__Impl
	rule__IsAt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle3Assignment_6()); }
	(rule__IsAt__Angle3Assignment_6)
	{ after(grammarAccess.getIsAtAccess().getAngle3Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__7__Impl
	rule__IsAt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__8__Impl
	rule__IsAt__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle4Assignment_8()); }
	(rule__IsAt__Angle4Assignment_8)
	{ after(grammarAccess.getIsAtAccess().getAngle4Assignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__9__Impl
	rule__IsAt__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_9()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__10__Impl
	rule__IsAt__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle5Assignment_10()); }
	(rule__IsAt__Angle5Assignment_10)
	{ after(grammarAccess.getIsAtAccess().getAngle5Assignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__11__Impl
	rule__IsAt__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__12__Impl
	rule__IsAt__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle6Assignment_12()); }
	(rule__IsAt__Angle6Assignment_12)
	{ after(grammarAccess.getIsAtAccess().getAngle6Assignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__13__Impl
	rule__IsAt__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getCommaKeyword_13()); }
	','
	{ after(grammarAccess.getIsAtAccess().getCommaKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__14__Impl
	rule__IsAt__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getAngle_resAssignment_14()); }
	(rule__IsAt__Angle_resAssignment_14)
	{ after(grammarAccess.getIsAtAccess().getAngle_resAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsAt__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsAtAccess().getRightParenthesisKeyword_15()); }
	')'
	{ after(grammarAccess.getIsAtAccess().getRightParenthesisKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__SurnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getSurnameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getScenarioAccess().getSurnameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__GivenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getGivenGivenParserRuleCall_3_0()); }
		ruleGiven
		{ after(grammarAccess.getScenarioAccess().getGivenGivenParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__AndGivenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getAndGivenAndWhenParserRuleCall_4_0()); }
		ruleAndWhen
		{ after(grammarAccess.getScenarioAccess().getAndGivenAndWhenParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__WhenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getWhenWhenParserRuleCall_5_0()); }
		ruleWhen
		{ after(grammarAccess.getScenarioAccess().getWhenWhenParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ThenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getThenThenParserRuleCall_6_0()); }
		ruleThen
		{ after(grammarAccess.getScenarioAccess().getThenThenParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__AndAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getAndAndParserRuleCall_7_0()); }
		ruleAnd
		{ after(grammarAccess.getScenarioAccess().getAndAndParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getNameGIVENKeyword_0_0()); }
		(
			{ before(grammarAccess.getGivenAccess().getNameGIVENKeyword_0_0()); }
			'GIVEN'
			{ after(grammarAccess.getGivenAccess().getNameGIVENKeyword_0_0()); }
		)
		{ after(grammarAccess.getGivenAccess().getNameGIVENKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__InitialAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getInitialInitialParserRuleCall_1_0()); }
		ruleInitial
		{ after(grammarAccess.getGivenAccess().getInitialInitialParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhen__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndWhenAccess().getNameANDKeyword_0_0()); }
		(
			{ before(grammarAccess.getAndWhenAccess().getNameANDKeyword_0_0()); }
			'AND'
			{ after(grammarAccess.getAndWhenAccess().getNameANDKeyword_0_0()); }
		)
		{ after(grammarAccess.getAndWhenAccess().getNameANDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndWhen__CommandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndWhenAccess().getCommandCommandParserRuleCall_1_0()); }
		ruleCommand
		{ after(grammarAccess.getAndWhenAccess().getCommandCommandParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getNameWHENKeyword_0_0()); }
		(
			{ before(grammarAccess.getWhenAccess().getNameWHENKeyword_0_0()); }
			'WHEN'
			{ after(grammarAccess.getWhenAccess().getNameWHENKeyword_0_0()); }
		)
		{ after(grammarAccess.getWhenAccess().getNameWHENKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__CommandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getCommandCommandParserRuleCall_1_0()); }
		ruleCommand
		{ after(grammarAccess.getWhenAccess().getCommandCommandParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getNameTHENKeyword_0_0()); }
		(
			{ before(grammarAccess.getThenAccess().getNameTHENKeyword_0_0()); }
			'THEN'
			{ after(grammarAccess.getThenAccess().getNameTHENKeyword_0_0()); }
		)
		{ after(grammarAccess.getThenAccess().getNameTHENKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getResultResultParserRuleCall_1_0()); }
		ruleResult
		{ after(grammarAccess.getThenAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getNameANDKeyword_0_0()); }
		(
			{ before(grammarAccess.getAndAccess().getNameANDKeyword_0_0()); }
			'AND'
			{ after(grammarAccess.getAndAccess().getNameANDKeyword_0_0()); }
		)
		{ after(grammarAccess.getAndAccess().getNameANDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__ConditionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getConditionsConditionsParserRuleCall_1_0()); }
		ruleConditions
		{ after(grammarAccess.getAndAccess().getConditionsConditionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__SolutionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getSolutionSolutionParserRuleCall_3_0()); }
		ruleSolution
		{ after(grammarAccess.getAndAccess().getSolutionSolutionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getNamePosInicialKeyword_0_0()); }
		(
			{ before(grammarAccess.getInitialAccess().getNamePosInicialKeyword_0_0()); }
			'posInicial'
			{ after(grammarAccess.getInitialAccess().getNamePosInicialKeyword_0_0()); }
		)
		{ after(grammarAccess.getInitialAccess().getNamePosInicialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getTimeTimeParserRuleCall_2_0()); }
		ruleTime
		{ after(grammarAccess.getInitialAccess().getTimeTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightRGBAccess().getNameLightRGBKeyword_0_0()); }
		(
			{ before(grammarAccess.getLightRGBAccess().getNameLightRGBKeyword_0_0()); }
			'lightRGB'
			{ after(grammarAccess.getLightRGBAccess().getNameLightRGBKeyword_0_0()); }
		)
		{ after(grammarAccess.getLightRGBAccess().getNameLightRGBKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__RAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightRGBAccess().getRRParserRuleCall_2_0()); }
		ruleR
		{ after(grammarAccess.getLightRGBAccess().getRRParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__GAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightRGBAccess().getGGParserRuleCall_4_0()); }
		ruleG
		{ after(grammarAccess.getLightRGBAccess().getGGParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightRGB__BAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightRGBAccess().getBBParserRuleCall_6_0()); }
		ruleB
		{ after(grammarAccess.getLightRGBAccess().getBBParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOff__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuzzerOffAccess().getNameBuzzerOffKeyword_0_0()); }
		(
			{ before(grammarAccess.getBuzzerOffAccess().getNameBuzzerOffKeyword_0_0()); }
			'buzzerOff'
			{ after(grammarAccess.getBuzzerOffAccess().getNameBuzzerOffKeyword_0_0()); }
		)
		{ after(grammarAccess.getBuzzerOffAccess().getNameBuzzerOffKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuzzerOnAccess().getNameBuzzerOnKeyword_0_0()); }
		(
			{ before(grammarAccess.getBuzzerOnAccess().getNameBuzzerOnKeyword_0_0()); }
			'buzzerOn'
			{ after(grammarAccess.getBuzzerOnAccess().getNameBuzzerOnKeyword_0_0()); }
		)
		{ after(grammarAccess.getBuzzerOnAccess().getNameBuzzerOnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuzzerOn__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuzzerOnAccess().getTimeTimeParserRuleCall_2_0()); }
		ruleTime
		{ after(grammarAccess.getBuzzerOnAccess().getTimeTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getNameCalibrationKeyword_0_0()); }
		(
			{ before(grammarAccess.getCalibrationAccess().getNameCalibrationKeyword_0_0()); }
			'calibration'
			{ after(grammarAccess.getCalibrationAccess().getNameCalibrationKeyword_0_0()); }
		)
		{ after(grammarAccess.getCalibrationAccess().getNameCalibrationKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__ColorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getColorColorParserRuleCall_2_0()); }
		ruleColor
		{ after(grammarAccess.getCalibrationAccess().getColorColorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__H_minAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getH_minH_minParserRuleCall_4_0()); }
		ruleH_min
		{ after(grammarAccess.getCalibrationAccess().getH_minH_minParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__S_minAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getS_minS_minParserRuleCall_6_0()); }
		ruleS_min
		{ after(grammarAccess.getCalibrationAccess().getS_minS_minParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__V_minAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getV_minV_minParserRuleCall_8_0()); }
		ruleV_min
		{ after(grammarAccess.getCalibrationAccess().getV_minV_minParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__H_maxAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getH_maxH_maxParserRuleCall_10_0()); }
		ruleH_max
		{ after(grammarAccess.getCalibrationAccess().getH_maxH_maxParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__S_maxAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getS_maxS_maxParserRuleCall_12_0()); }
		ruleS_max
		{ after(grammarAccess.getCalibrationAccess().getS_maxS_maxParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__V_maxAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getV_maxV_maxParserRuleCall_14_0()); }
		ruleV_max
		{ after(grammarAccess.getCalibrationAccess().getV_maxV_maxParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraColorAccess().getNameCameraColorKeyword_0_0()); }
		(
			{ before(grammarAccess.getCameraColorAccess().getNameCameraColorKeyword_0_0()); }
			'cameraColor'
			{ after(grammarAccess.getCameraColorAccess().getNameCameraColorKeyword_0_0()); }
		)
		{ after(grammarAccess.getCameraColorAccess().getNameCameraColorKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColor__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraColorAccess().getTimeTimeParserRuleCall_2_0()); }
		ruleTime
		{ after(grammarAccess.getCameraColorAccess().getTimeTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadAllServos__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadAllServosAccess().getNameReadAllServosKeyword_0_0()); }
		(
			{ before(grammarAccess.getReadAllServosAccess().getNameReadAllServosKeyword_0_0()); }
			'readAllServos'
			{ after(grammarAccess.getReadAllServosAccess().getNameReadAllServosKeyword_0_0()); }
		)
		{ after(grammarAccess.getReadAllServosAccess().getNameReadAllServosKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadServoAccess().getNameReadServoKeyword_0_0()); }
		(
			{ before(grammarAccess.getReadServoAccess().getNameReadServoKeyword_0_0()); }
			'readServo'
			{ after(grammarAccess.getReadServoAccess().getNameReadServoKeyword_0_0()); }
		)
		{ after(grammarAccess.getReadServoAccess().getNameReadServoKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadServo__ServoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadServoAccess().getServoServoParserRuleCall_2_0()); }
		ruleServo
		{ after(grammarAccess.getReadServoAccess().getServoServoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateServoAccess().getNameRotateServoKeyword_0_0()); }
		(
			{ before(grammarAccess.getRotateServoAccess().getNameRotateServoKeyword_0_0()); }
			'rotateServo'
			{ after(grammarAccess.getRotateServoAccess().getNameRotateServoKeyword_0_0()); }
		)
		{ after(grammarAccess.getRotateServoAccess().getNameRotateServoKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__ServoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateServoAccess().getServoServoParserRuleCall_2_0()); }
		ruleServo
		{ after(grammarAccess.getRotateServoAccess().getServoServoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__AngleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateServoAccess().getAngleAngleParserRuleCall_4_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateServoAccess().getAngleAngleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateServo__TimeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateServoAccess().getTimeTimeParserRuleCall_6_0()); }
		ruleTime
		{ after(grammarAccess.getRotateServoAccess().getTimeTimeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getNameRotateAllServosKeyword_0_0()); }
		(
			{ before(grammarAccess.getRotateAllServosAccess().getNameRotateAllServosKeyword_0_0()); }
			'rotateAllServos'
			{ after(grammarAccess.getRotateAllServosAccess().getNameRotateAllServosKeyword_0_0()); }
		)
		{ after(grammarAccess.getRotateAllServosAccess().getNameRotateAllServosKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle1AngleParserRuleCall_2_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle1AngleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle2AngleParserRuleCall_4_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle2AngleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle3Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle3AngleParserRuleCall_6_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle3AngleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle4Assignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle4AngleParserRuleCall_8_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle4AngleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle5Assignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle5AngleParserRuleCall_10_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle5AngleParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__Angle6Assignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getAngle6AngleParserRuleCall_12_0()); }
		ruleAngle
		{ after(grammarAccess.getRotateAllServosAccess().getAngle6AngleParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAllServos__TimeAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAllServosAccess().getTimeTimeParserRuleCall_14_0()); }
		ruleTime
		{ after(grammarAccess.getRotateAllServosAccess().getTimeTimeParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getNameResultKeyword_0_0()); }
		(
			{ before(grammarAccess.getResultAccess().getNameResultKeyword_0_0()); }
			'result'
			{ after(grammarAccess.getResultAccess().getNameResultKeyword_0_0()); }
		)
		{ after(grammarAccess.getResultAccess().getNameResultKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTimeTimeParserRuleCall_2_0()); }
		ruleTime
		{ after(grammarAccess.getResultAccess().getTimeTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionsAccess().getNameNotLaterThanKeyword_0_0()); }
		(
			{ before(grammarAccess.getConditionsAccess().getNameNotLaterThanKeyword_0_0()); }
			'NotLaterThan'
			{ after(grammarAccess.getConditionsAccess().getNameNotLaterThanKeyword_0_0()); }
		)
		{ after(grammarAccess.getConditionsAccess().getNameNotLaterThanKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionsAccess().getTimeTimeParserRuleCall_2_0()); }
		ruleTime
		{ after(grammarAccess.getConditionsAccess().getTimeTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtSingleAccess().getNameIsAtSingleKeyword_0_0()); }
		(
			{ before(grammarAccess.getIsAtSingleAccess().getNameIsAtSingleKeyword_0_0()); }
			'isAtSingle'
			{ after(grammarAccess.getIsAtSingleAccess().getNameIsAtSingleKeyword_0_0()); }
		)
		{ after(grammarAccess.getIsAtSingleAccess().getNameIsAtSingleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__ServoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtSingleAccess().getServoServoParserRuleCall_2_0()); }
		ruleServo
		{ after(grammarAccess.getIsAtSingleAccess().getServoServoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__AngleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtSingleAccess().getAngleAngleParserRuleCall_4_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtSingleAccess().getAngleAngleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAtSingle__Angle_resAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtSingleAccess().getAngle_resAngle_resParserRuleCall_6_0()); }
		ruleAngle_res
		{ after(grammarAccess.getIsAtSingleAccess().getAngle_resAngle_resParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getNameIsAtKeyword_0_0()); }
		(
			{ before(grammarAccess.getIsAtAccess().getNameIsAtKeyword_0_0()); }
			'isAt'
			{ after(grammarAccess.getIsAtAccess().getNameIsAtKeyword_0_0()); }
		)
		{ after(grammarAccess.getIsAtAccess().getNameIsAtKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle1AngleParserRuleCall_2_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle1AngleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle2AngleParserRuleCall_4_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle2AngleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle3Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle3AngleParserRuleCall_6_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle3AngleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle4Assignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle4AngleParserRuleCall_8_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle4AngleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle5Assignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle5AngleParserRuleCall_10_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle5AngleParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle6Assignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle6AngleParserRuleCall_12_0()); }
		ruleAngle
		{ after(grammarAccess.getIsAtAccess().getAngle6AngleParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsAt__Angle_resAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsAtAccess().getAngle_resAngle_resParserRuleCall_14_0()); }
		ruleAngle_res
		{ after(grammarAccess.getIsAtAccess().getAngle_resAngle_resParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Angle_res__Angle_resAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAngle_resAccess().getAngle_resINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getAngle_resAccess().getAngle_resINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__AngleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAngleAccess().getAngleINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getAngleAccess().getAngleINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Servo__ServoAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServoAccess().getServoINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getServoAccess().getServoINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__V_max__V_maxAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getV_maxAccess().getV_maxINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getV_maxAccess().getV_maxINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_max__S_maxAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_maxAccess().getS_maxINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getS_maxAccess().getS_maxINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__H_max__H_maxAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getH_maxAccess().getH_maxINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getH_maxAccess().getH_maxINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__V_min__V_minAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getV_minAccess().getV_minINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getV_minAccess().getV_minINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_min__S_minAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_minAccess().getS_minINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getS_minAccess().getS_minINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__H_min__H_minAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getH_minAccess().getH_minINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getH_minAccess().getH_minINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__ColorAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getColorSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getColorAccess().getColorSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B__BAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAccess().getBINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getBAccess().getBINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__G__GAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGAccess().getGINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getGAccess().getGINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__R__RAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAccess().getRINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getRAccess().getRINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
